var WebViewBundle=function(exports,React){"use strict";function _interopDefaultLegacy(e){return e&&typeof e==="object"&&"default"in e?e:{default:e}}var React__default=_interopDefaultLegacy(React);function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}const Button=({text:text,clickHandler:clickHandler,className:className})=>React__default["default"].createElement("button",{onClick:clickHandler,className:className},text);const handleCheckboxClick=()=>{console.log("Checkbox clicked. need to do something here")};const Header=({lastUpdated:lastUpdated,totalItems:totalItems,refreshHandler:refreshHandler})=>React__default["default"].createElement("div",{className:"header"},React__default["default"].createElement("div",{className:"lastUpdated"},"Last updated: ",React__default["default"].createElement("span",{id:"timer"},lastUpdated)," "),React__default["default"].createElement(Button,{className:"XCBButton",clickHandler:refreshHandler,text:"Refresh"}),React__default["default"].createElement("div",{className:"totalCounts"},React__default["default"].createElement("span",{id:"totalDoneCount"},"0")," items closed"),React__default["default"].createElement("div",null,React__default["default"].createElement("input",{type:"checkbox",className:"apple-switch",onChange:handleCheckboxClick,name:"filterPriorityItems",id:"filterPriorityItems"}),React__default["default"].createElement("label",{htmlFor:"filterPriorityItems"},"Filter out lower-priority items?")));const ItemRow=({status:status,content:content})=>React__default["default"].createElement("div",{className:"itemRow"},React__default["default"].createElement("span",null,status),React__default["default"].createElement("span",null,content));const ItemGrid=({items:items})=>React__default["default"].createElement("div",{className:"sectionItemsGrid"},items.map(((item,index)=>React__default["default"].createElement(ItemRow,_extends({key:index},item)))));const Section=({name:name,description:description,items:items})=>React__default["default"].createElement("div",{className:"section"},React__default["default"].createElement("div",{className:"sectionInfo"},React__default["default"].createElement("span",{className:"sidebarDaily sectionName"},React__default["default"].createElement("i",{className:"sectionIcon fa-light fa-calendar-star"}),name),React__default["default"].createElement("span",{className:"sectionDescription"},React__default["default"].createElement("span",{id:"section0Count"},"10")," from daily note or scheduled to 3/24/2024"," ",React__default["default"].createElement("button",{className:"XCBButton tooltip","data-tooltip":"Add a new task to today's note","data-plugin-id":"jgclark.Dashboard","data-command":"addTask","data-command-args":"20240324.md"},React__default["default"].createElement("i",{className:"fa-regular fa-circle-plus sidebarDaily"}))," ",React__default["default"].createElement("button",{className:"XCBButton tooltip","data-tooltip":"Add a new checklist to today's note","data-plugin-id":"jgclark.Dashboard","data-command":"addChecklist","data-command-args":"20240324.md"},React__default["default"].createElement("i",{className:"fa-regular fa-square-plus sidebarDaily"}))," ",React__default["default"].createElement("button",{className:"XCBButton tooltip","data-tooltip":"Add a new task to tomorrow's note","data-plugin-id":"jgclark.Dashboard","data-command":"addTask","data-command-args":"20240325.md"},React__default["default"].createElement("i",{className:"fa-regular fa-circle-arrow-right sidebarDaily"}))," ",React__default["default"].createElement("button",{className:"XCBButton tooltip","data-tooltip":"Add a new checklist to tomorrow's note","data-plugin-id":"jgclark.Dashboard","data-command":"addChecklist","data-command-args":"20240325.md"},React__default["default"].createElement("i",{className:"fa-regular fa-square-arrow-right sidebarDaily"})))),React__default["default"].createElement(ItemGrid,{items:items}));const Dashboard=({data:data,dispatch:dispatch,sendActionToPlugin:sendActionToPlugin})=>{const{sections:sections,lastUpdated:lastUpdated,totalItems:totalItems}=data;const refreshHandler=()=>{sendActionToPlugin("refresh",{})};return React__default["default"].createElement("div",{style:{maxWidth:"100vw",width:"100vw"}},React__default["default"].createElement("div",{className:"dashboard"},React__default["default"].createElement(Header,{lastUpdated:lastUpdated,totalItems:totalItems,refreshHandler:refreshHandler}),sections.map(((section,index)=>React__default["default"].createElement(Section,_extends({key:index},section))))))};const consoleStyle="background: #222; color: #bada55";const logDebug=(msg,...args)=>console.log(`${window.webkit?"":"%c"}${msg}`,consoleStyle,...args);function WebView({data:data,dispatch:dispatch}){const{pluginData:pluginData,debug:debug}=data;logDebug(`Webview received pluginData:\n${JSON.stringify(pluginData,null,2)}`);React.useEffect((()=>{logDebug(`Webview: useEffect: data changed. data: ${JSON.stringify(data)}`);if(data?.passThroughVars?.lastWindowScrollTop!==undefined&&data.passThroughVars.lastWindowScrollTop!==window.scrollY){debug&&logDebug(`Webview: useEffect: data changed. Scrolling to ${String(data.lastWindowScrollTop)}`);window.scrollTo(0,data.passThroughVars.lastWindowScrollTop)}}),[data]);const addPassthroughVars=data=>{const newData={...data};if(!newData.passThroughVars)newData.passThroughVars={};newData.passThroughVars.lastWindowScrollTop=window.scrollY;return newData};const sendActionToPlugin=(command,dataToSend)=>{const newData=addPassthroughVars(data);dispatch("UPDATE_DATA",newData);sendToPlugin([command,dataToSend])};const sendToPlugin=([command,data,additionalDetails=""])=>{if(!command)throw new Error("sendToPlugin: command must be called with a string");logDebug(`Webview: sendToPlugin: ${JSON.stringify(command)} ${additionalDetails}`,command,data,additionalDetails);if(!data)throw new Error("sendToPlugin: data must be called with an object");dispatch("SEND_TO_PLUGIN",[command,data],`WebView: sendToPlugin: ${String(command)} ${additionalDetails}`)};return React__default["default"].createElement(Dashboard,{data:pluginData,dispatch:dispatch,sendActionToPlugin:sendActionToPlugin})}exports.WebView=WebView;Object.defineProperty(exports,"__esModule",{value:true});return exports}({},react);Object.assign(typeof globalThis=="undefined"?this:globalThis,WebViewBundle);
